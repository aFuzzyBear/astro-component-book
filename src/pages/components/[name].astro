---
import { promises as fs } from 'node:fs'

export async function getStaticPaths() {
	const rootURL = new URL('../../components/', import.meta.url)

	const getURLs = async (dir: URL) => {
		let urls = []

		for await (const entry of await fs.opendir(dir)) {
			if (entry.isDirectory()) {
				urls.push(
					...await getURLs(new URL(entry.name + '/', dir))
				)
			} else if (entry.name.endsWith('.story.astro')) {
				urls.push(new URL(entry.name, dir))
			}
		}

		return urls
	}

	const urls = await getURLs(rootURL)

	return urls.map(url => {
		const name = url.href.slice(new URL('../', url).href.length, -18)
		const href = url.href

		return {
			params: { name },
			props: { href, name },
		}
	})
}

const Story = await import(new URL(Astro.props.href).pathname).then(exports => exports.default)
---
<html lang="en">

<head>
	<meta charset="utf-8" />
	<meta name="viewport" content="width=device-width" />
	<title>{Astro.props.name} | Components</title>
</head>

<body>
	<h1>{Astro.props.name}</h1>
	<p>{Astro.props.href}</p>
	<Story />
</body>

</html>